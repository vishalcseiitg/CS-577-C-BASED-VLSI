<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <synLog/>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog>
        <logs message="ERROR: [SIM 211-100] CSim failed with errors." projectName="array_hls_27_jan" solutionName="pragma_enabled" date="2023-01-27T18:12:59.846+0530"/>
        <logs message="ERROR: [HLS 200-627] Cannot find C test bench. Please specify test bench files using 'add_files -tb'." projectName="array_hls_27_jan" solutionName="pragma_enabled" date="2023-01-27T18:12:59.842+0530"/>
      </csimLog>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <synLog/>
      <simLog>
        <logs message="WARNING: [Simtcl 6-197] One or more HDL objects could not be logged because of object type or size limitations.  To see details please rerun the command with -verbose (-v).&#xA;## set designtopgroup [add_wave_group &quot;Design Top Signals&quot;]&#xA;## set coutputgroup [add_wave_group &quot;C Outputs&quot; -into $designtopgroup]&#xA;## set return_group [add_wave_group return(wire) -into $coutputgroup]&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/S_ap_vld -into $return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/S -into $return_group -radix hex&#xA;## set cinputgroup [add_wave_group &quot;C Inputs&quot; -into $designtopgroup]&#xA;## set return_group [add_wave_group return(wire) -into $cinputgroup]&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/A -into $return_group -radix hex&#xA;## set blocksiggroup [add_wave_group &quot;Block-level IO Handshake&quot; -into $designtopgroup]&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/ap_start -into $blocksiggroup&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/ap_done -into $blocksiggroup&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/ap_idle -into $blocksiggroup&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/ap_ready -into $blocksiggroup&#xA;## set resetgroup [add_wave_group &quot;Reset&quot; -into $designtopgroup]&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/ap_rst -into $resetgroup&#xA;## set clockgroup [add_wave_group &quot;Clock&quot; -into $designtopgroup]&#xA;## add_wave /apatb_funArr_top/AESL_inst_funArr/ap_clk -into $clockgroup&#xA;## set testbenchgroup [add_wave_group &quot;Test Bench Signals&quot;]&#xA;## set tbinternalsiggroup [add_wave_group &quot;Internal Signals&quot; -into $testbenchgroup]&#xA;## set tb_simstatus_group [add_wave_group &quot;Simulation Status&quot; -into $tbinternalsiggroup]&#xA;## set tb_portdepth_group [add_wave_group &quot;Port Depth&quot; -into $tbinternalsiggroup]&#xA;## add_wave /apatb_funArr_top/AUTOTB_TRANSACTION_NUM -into $tb_simstatus_group -radix hex&#xA;## add_wave /apatb_funArr_top/ready_cnt -into $tb_simstatus_group -radix hex&#xA;## add_wave /apatb_funArr_top/done_cnt -into $tb_simstatus_group -radix hex&#xA;## add_wave /apatb_funArr_top/LENGTH_A -into $tb_portdepth_group -radix hex&#xA;## add_wave /apatb_funArr_top/LENGTH_S -into $tb_portdepth_group -radix hex&#xA;## set tbcoutputgroup [add_wave_group &quot;C Outputs&quot; -into $testbenchgroup]&#xA;## set tb_return_group [add_wave_group return(wire) -into $tbcoutputgroup]&#xA;## add_wave /apatb_funArr_top/S_ap_vld -into $tb_return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_funArr_top/S -into $tb_return_group -radix hex&#xA;## set tbcinputgroup [add_wave_group &quot;C Inputs&quot; -into $testbenchgroup]&#xA;## set tb_return_group [add_wave_group return(wire) -into $tbcinputgroup]&#xA;## add_wave /apatb_funArr_top/A -into $tb_return_group -radix hex&#xA;## save_wave_config funArr.wcfg&#xA;## run all&#xA;////////////////////////////////////////////////////////////////////////////////////&#xA;// Inter-Transaction Progress: Completed Transaction / Total Transaction&#xA;// Intra-Transaction Progress: Measured Latency / Latency Estimation * 100%&#xA;//&#xA;// RTL Simulation : &quot;Inter-Transaction Progress&quot; [&quot;Intra-Transaction Progress&quot;] @ &quot;Simulation Time&quot;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xA;// RTL Simulation : 0 / 1 [0.00%] @ &quot;125000&quot;&#xA;// RTL Simulation : 1 / 1 [100.00%] @ &quot;315000&quot;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xA;$finish called at time : 375 ns : File &quot;/home/vishal/array_hls_27_jan/solution1/sim/verilog/funArr.autotb.v&quot; Line 281&#xA;## quit" projectName="array_hls_27_jan" solutionName="solution1" date="2023-01-27T17:59:22.988+0530" type="Warning"/>
        <logs message="WARNING: [XSIM 43-3431] One or more environment variables have been detected which affect the operation of the C compiler. These are typically not set in standard installations and are not tested by Xilinx, however they may be appropriate for your system, so the flow will attempt to continue.  If errors occur, try running xelab with the &quot;-mt off -v 1&quot; switches to see more information from the C compiler. The following environment variables have been detected:&#xA;    LIBRARY_PATH" projectName="array_hls_27_jan" solutionName="solution1" date="2023-01-27T17:59:15.794+0530" type="Warning"/>
        <logs message="WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined" projectName="array_hls_27_jan" solutionName="solution1" date="2023-01-27T17:59:08.525+0530" type="Warning"/>
      </simLog>
      <mgLog/>
      <packageLog/>
      <csimLog>
        <logs message="WARNING: [HLS 200-40] Cannot find test bench file 'hls_array_tb.cpp'" projectName="array_hls_27_jan" solutionName="pragma_enabled" date="2023-01-27T18:12:47.741+0530" type="Warning"/>
        <logs message="WARNING: [HLS 200-40] Cannot find design file 'array_hls.cpp'" projectName="array_hls_27_jan" solutionName="pragma_enabled" date="2023-01-27T18:12:47.737+0530" type="Warning"/>
      </csimLog>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
