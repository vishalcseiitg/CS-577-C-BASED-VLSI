

================================================================
== Vitis HLS Report for 'diffeq'
================================================================
* Date:           Mon Jan 23 16:09:21 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        diffeq_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.958 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_6_1  |        ?|        ?|        37|         28|          1|     ?|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       0|     86|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        -|   17|    1602|   2868|    -|
|Memory           |        -|    -|       -|      -|    -|
|Multiplexer      |        -|    -|       -|    316|    -|
|Register         |        -|    -|     801|      -|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        0|   17|    2403|   3270|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      280|  220|  106400|  53200|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        0|    7|       2|      6|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    +---------------------------------------+------------------------------------+---------+----+-----+------+-----+
    |                Instance               |               Module               | BRAM_18K| DSP|  FF |  LUT | URAM|
    +---------------------------------------+------------------------------------+---------+----+-----+------+-----+
    |dadddsub_64ns_64ns_64_7_full_dsp_1_U1  |dadddsub_64ns_64ns_64_7_full_dsp_1  |        0|   3|  630|  1141|    0|
    |dcmp_64ns_64ns_1_2_no_dsp_1_U4         |dcmp_64ns_64ns_1_2_no_dsp_1         |        0|   0|    0|     0|    0|
    |dmul_64ns_64ns_64_7_max_dsp_1_U3       |dmul_64ns_64ns_64_7_max_dsp_1       |        0|  11|  342|   586|    0|
    |dsub_64ns_64ns_64_7_full_dsp_1_U2      |dsub_64ns_64ns_64_7_full_dsp_1      |        0|   3|  630|  1141|    0|
    +---------------------------------------+------------------------------------+---------+----+-----+------+-----+
    |Total                                  |                                    |        0|  17| 1602|  2868|    0|
    +---------------------------------------+------------------------------------+---------+----+-----+------+-----+

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +----------------------+----------+----+---+----+------------+------------+
    |     Variable Name    | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------+----------+----+---+----+------------+------------+
    |and_ln6_1_fu_226_p2   |       and|   0|  0|   2|           1|           1|
    |and_ln6_fu_221_p2     |       and|   0|  0|   2|           1|           1|
    |ap_condition_223      |       and|   0|  0|   2|           1|           1|
    |ap_condition_658      |       and|   0|  0|   2|           1|           1|
    |ap_condition_662      |       and|   0|  0|   2|           1|           1|
    |icmp_ln6_1_fu_209_p2  |      icmp|   0|  0|  24|          52|           1|
    |icmp_ln6_2_fu_149_p2  |      icmp|   0|  0|  11|          11|           2|
    |icmp_ln6_3_fu_155_p2  |      icmp|   0|  0|  24|          52|           1|
    |icmp_ln6_fu_203_p2    |      icmp|   0|  0|  11|          11|           2|
    |or_ln6_1_fu_161_p2    |        or|   0|  0|   2|           1|           1|
    |or_ln6_fu_215_p2      |        or|   0|  0|   2|           1|           1|
    |ap_enable_pp0         |       xor|   0|  0|   2|           1|           2|
    +----------------------+----------+----+---+----+------------+------------+
    |Total                 |          |   0|  0|  86|         134|          15|
    +----------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +--------------------------------+-----+-----------+-----+-----------+
    |              Name              | LUT | Input Size| Bits| Total Bits|
    +--------------------------------+-----+-----------+-----+-----------+
    |ap_NS_fsm                       |  130|         29|    1|         29|
    |ap_done_int                     |    9|          2|    1|          2|
    |ap_enable_reg_pp0_iter0         |    9|          2|    1|          2|
    |ap_enable_reg_pp0_iter0_reg     |    9|          2|    1|          2|
    |ap_enable_reg_pp0_iter1         |    9|          2|    1|          2|
    |ap_sig_allocacmp_u_assign_load  |    9|          2|   64|        128|
    |ap_sig_allocacmp_x_assign_load  |    9|          2|   64|        128|
    |grp_fu_104_p0                   |   31|          6|   64|        384|
    |grp_fu_104_p1                   |   20|          4|   64|        256|
    |grp_fu_96_opcode                |   14|          3|    2|          6|
    |grp_fu_96_p0                    |   20|          4|   64|        256|
    |grp_fu_96_p1                    |   20|          4|   64|        256|
    |u_assign_fu_62                  |    9|          2|   64|        128|
    |x_assign_fu_54                  |    9|          2|   64|        128|
    |y_assign_fu_58                  |    9|          2|   64|        128|
    +--------------------------------+-----+-----------+-----+-----------+
    |Total                           |  316|         68|  583|       1835|
    +--------------------------------+-----+-----------+-----+-----------+

    * Register: 
    +-----------------------------+----+----+-----+-----------+
    |             Name            | FF | LUT| Bits| Const Bits|
    +-----------------------------+----+----+-----+-----------+
    |and_ln6_1_reg_303            |   1|   0|    1|          0|
    |ap_CS_fsm                    |  28|   0|   28|          0|
    |ap_done_reg                  |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter0_reg  |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1      |   1|   0|    1|          0|
    |dx_read_reg_284              |  64|   0|   64|          0|
    |mul6_reg_320                 |  64|   0|   64|          0|
    |or_ln6_1_reg_290             |   1|   0|    1|          0|
    |reg_114                      |  64|   0|   64|          0|
    |reg_120                      |  64|   0|   64|          0|
    |reg_125                      |  64|   0|   64|          0|
    |u1_reg_325                   |  64|   0|   64|          0|
    |u_assign_fu_62               |  64|   0|   64|          0|
    |u_assign_load_reg_313        |  64|   0|   64|          0|
    |x_assign_fu_54               |  64|   0|   64|          0|
    |x_assign_load_reg_295        |  64|   0|   64|          0|
    |y_assign_fu_58               |  64|   0|   64|          0|
    |y_assign_load_reg_307        |  64|   0|   64|          0|
    +-----------------------------+----+----+-----+-----------+
    |Total                        | 801|   0|  801|          0|
    +-----------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------+-----+-----+------------+--------------+--------------+
| RTL Ports | Dir | Bits|  Protocol  | Source Object|    C Type    |
+-----------+-----+-----+------------+--------------+--------------+
|ap_clk     |   in|    1|  ap_ctrl_hs|        diffeq|  return value|
|ap_rst     |   in|    1|  ap_ctrl_hs|        diffeq|  return value|
|ap_start   |   in|    1|  ap_ctrl_hs|        diffeq|  return value|
|ap_done    |  out|    1|  ap_ctrl_hs|        diffeq|  return value|
|ap_idle    |  out|    1|  ap_ctrl_hs|        diffeq|  return value|
|ap_ready   |  out|    1|  ap_ctrl_hs|        diffeq|  return value|
|ap_return  |  out|   64|  ap_ctrl_hs|        diffeq|  return value|
|x          |   in|   64|     ap_none|             x|        scalar|
|dx         |   in|   64|     ap_none|            dx|        scalar|
|u          |   in|   64|     ap_none|             u|        scalar|
|a          |   in|   64|     ap_none|             a|        scalar|
|clock      |   in|   64|     ap_none|         clock|        scalar|
|y          |   in|   64|     ap_none|             y|        scalar|
+-----------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 28, depth = 37


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 37
* Pipeline : 1
  Pipeline-0 : II = 28, D = 37, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.46>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%x_assign = alloca i32 1"   --->   Operation 40 'alloca' 'x_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%y_assign = alloca i32 1"   --->   Operation 41 'alloca' 'y_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%u_assign = alloca i32 1"   --->   Operation 42 'alloca' 'u_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 0"   --->   Operation 43 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [diffeq.cpp:3]   --->   Operation 44 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %x"   --->   Operation 45 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %x, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 46 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %dx"   --->   Operation 47 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %dx, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 48 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %u"   --->   Operation 49 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %u, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 50 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %a"   --->   Operation 51 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 52 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %clock"   --->   Operation 53 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %clock, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 54 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %y"   --->   Operation 55 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %y, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 56 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%y_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %y" [diffeq.cpp:3]   --->   Operation 57 'read' 'y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%a_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %a" [diffeq.cpp:3]   --->   Operation 58 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%u_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %u" [diffeq.cpp:3]   --->   Operation 59 'read' 'u_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%dx_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %dx" [diffeq.cpp:3]   --->   Operation 60 'read' 'dx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%x_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %x" [diffeq.cpp:3]   --->   Operation 61 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%bitcast_ln6_1 = bitcast i64 %a_read" [diffeq.cpp:6]   --->   Operation 62 'bitcast' 'bitcast_ln6_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln6_1, i32 52, i32 62" [diffeq.cpp:6]   --->   Operation 63 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln6 = trunc i64 %bitcast_ln6_1" [diffeq.cpp:6]   --->   Operation 64 'trunc' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (1.88ns)   --->   "%icmp_ln6_2 = icmp_ne  i11 %tmp_1, i11 2047" [diffeq.cpp:6]   --->   Operation 65 'icmp' 'icmp_ln6_2' <Predicate = true> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (2.89ns)   --->   "%icmp_ln6_3 = icmp_eq  i52 %trunc_ln6, i52 0" [diffeq.cpp:6]   --->   Operation 66 'icmp' 'icmp_ln6_3' <Predicate = true> <Delay = 2.89> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.97ns)   --->   "%or_ln6_1 = or i1 %icmp_ln6_3, i1 %icmp_ln6_2" [diffeq.cpp:6]   --->   Operation 67 'or' 'or_ln6_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (1.58ns)   --->   "%store_ln6 = store i64 %u_read, i64 %u_assign" [diffeq.cpp:6]   --->   Operation 68 'store' 'store_ln6' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 69 [1/1] (1.58ns)   --->   "%store_ln6 = store i64 %y_read, i64 %y_assign" [diffeq.cpp:6]   --->   Operation 69 'store' 'store_ln6' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 70 [1/1] (1.58ns)   --->   "%store_ln6 = store i64 %x_read, i64 %x_assign" [diffeq.cpp:6]   --->   Operation 70 'store' 'store_ln6' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln6 = br void %while.cond" [diffeq.cpp:6]   --->   Operation 71 'br' 'br_ln6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%x_assign_load = load i64 %x_assign" [diffeq.cpp:9]   --->   Operation 72 'load' 'x_assign_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [2/2] (5.46ns)   --->   "%tmp_2 = fcmp_olt  i64 %x_assign_load, i64 %a_read" [diffeq.cpp:6]   --->   Operation 73 'dcmp' 'tmp_2' <Predicate = true> <Delay = 5.46> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 5.46> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 7.95>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 74 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%bitcast_ln6 = bitcast i64 %x_assign_load" [diffeq.cpp:6]   --->   Operation 75 'bitcast' 'bitcast_ln6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%tmp = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln6, i32 52, i32 62" [diffeq.cpp:6]   --->   Operation 76 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln6_1 = trunc i64 %bitcast_ln6" [diffeq.cpp:6]   --->   Operation 77 'trunc' 'trunc_ln6_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (1.88ns)   --->   "%icmp_ln6 = icmp_ne  i11 %tmp, i11 2047" [diffeq.cpp:6]   --->   Operation 78 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (2.89ns)   --->   "%icmp_ln6_1 = icmp_eq  i52 %trunc_ln6_1, i52 0" [diffeq.cpp:6]   --->   Operation 79 'icmp' 'icmp_ln6_1' <Predicate = true> <Delay = 2.89> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.89> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node and_ln6_1)   --->   "%or_ln6 = or i1 %icmp_ln6_1, i1 %icmp_ln6" [diffeq.cpp:6]   --->   Operation 80 'or' 'or_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/2] (5.46ns)   --->   "%tmp_2 = fcmp_olt  i64 %x_assign_load, i64 %a_read" [diffeq.cpp:6]   --->   Operation 81 'dcmp' 'tmp_2' <Predicate = true> <Delay = 5.46> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 5.46> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node and_ln6_1)   --->   "%and_ln6 = and i1 %tmp_2, i1 %or_ln6_1" [diffeq.cpp:6]   --->   Operation 82 'and' 'and_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln6_1 = and i1 %and_ln6, i1 %or_ln6" [diffeq.cpp:6]   --->   Operation 83 'and' 'and_ln6_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%br_ln6 = br i1 %and_ln6_1, void %while.end, void %while.body" [diffeq.cpp:6]   --->   Operation 84 'br' 'br_ln6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [7/7] (7.95ns)   --->   "%mul = dmul i64 %x_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 85 'dmul' 'mul' <Predicate = (and_ln6_1)> <Delay = 7.95> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [7/7] (7.29ns)   --->   "%x1 = dadd i64 %x_assign_load, i64 %dx_read" [diffeq.cpp:9]   --->   Operation 86 'dadd' 'x1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 7.95>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%y_assign_load = load i64 %y_assign" [diffeq.cpp:8]   --->   Operation 87 'load' 'y_assign_load' <Predicate = (and_ln6_1)> <Delay = 0.00>
ST_3 : Operation 88 [6/7] (6.71ns)   --->   "%mul = dmul i64 %x_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 88 'dmul' 'mul' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [7/7] (7.95ns)   --->   "%mul3 = dmul i64 %y_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 89 'dmul' 'mul3' <Predicate = (and_ln6_1)> <Delay = 7.95> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [6/7] (7.29ns)   --->   "%x1 = dadd i64 %x_assign_load, i64 %dx_read" [diffeq.cpp:9]   --->   Operation 90 'dadd' 'x1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 7.29>
ST_4 : Operation 91 [5/7] (6.71ns)   --->   "%mul = dmul i64 %x_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 91 'dmul' 'mul' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 92 [6/7] (6.71ns)   --->   "%mul3 = dmul i64 %y_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 92 'dmul' 'mul3' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [5/7] (7.29ns)   --->   "%x1 = dadd i64 %x_assign_load, i64 %dx_read" [diffeq.cpp:9]   --->   Operation 93 'dadd' 'x1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 7.29>
ST_5 : Operation 94 [4/7] (6.71ns)   --->   "%mul = dmul i64 %x_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 94 'dmul' 'mul' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 95 [5/7] (6.71ns)   --->   "%mul3 = dmul i64 %y_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 95 'dmul' 'mul3' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [4/7] (7.29ns)   --->   "%x1 = dadd i64 %x_assign_load, i64 %dx_read" [diffeq.cpp:9]   --->   Operation 96 'dadd' 'x1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.29>
ST_6 : Operation 97 [3/7] (6.71ns)   --->   "%mul = dmul i64 %x_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 97 'dmul' 'mul' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 98 [4/7] (6.71ns)   --->   "%mul3 = dmul i64 %y_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 98 'dmul' 'mul3' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 99 [3/7] (7.29ns)   --->   "%x1 = dadd i64 %x_assign_load, i64 %dx_read" [diffeq.cpp:9]   --->   Operation 99 'dadd' 'x1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.29>
ST_7 : Operation 100 [2/7] (6.71ns)   --->   "%mul = dmul i64 %x_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 100 'dmul' 'mul' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [3/7] (6.71ns)   --->   "%mul3 = dmul i64 %y_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 101 'dmul' 'mul3' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 102 [2/7] (7.29ns)   --->   "%x1 = dadd i64 %x_assign_load, i64 %dx_read" [diffeq.cpp:9]   --->   Operation 102 'dadd' 'x1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.29>
ST_8 : Operation 103 [1/7] (6.71ns)   --->   "%mul = dmul i64 %x_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 103 'dmul' 'mul' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 104 [2/7] (6.71ns)   --->   "%mul3 = dmul i64 %y_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 104 'dmul' 'mul3' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 105 [1/7] (7.29ns)   --->   "%x1 = dadd i64 %x_assign_load, i64 %dx_read" [diffeq.cpp:9]   --->   Operation 105 'dadd' 'x1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.95>
ST_9 : Operation 106 [1/1] (0.00ns)   --->   "%u_assign_load = load i64 %u_assign" [diffeq.cpp:8]   --->   Operation 106 'load' 'u_assign_load' <Predicate = (and_ln6_1)> <Delay = 0.00>
ST_9 : Operation 107 [7/7] (7.95ns)   --->   "%mul1 = dmul i64 %mul, i64 %u_assign_load" [diffeq.cpp:7]   --->   Operation 107 'dmul' 'mul1' <Predicate = (and_ln6_1)> <Delay = 7.95> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 108 [1/7] (6.71ns)   --->   "%mul3 = dmul i64 %y_assign_load, i64 3" [diffeq.cpp:7]   --->   Operation 108 'dmul' 'mul3' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 109 [1/1] (1.58ns)   --->   "%store_ln6 = store i64 %x1, i64 %x_assign" [diffeq.cpp:6]   --->   Operation 109 'store' 'store_ln6' <Predicate = (and_ln6_1)> <Delay = 1.58>
ST_9 : Operation 162 [1/1] (0.00ns)   --->   "%y_assign_load_1 = load i64 %y_assign" [diffeq.cpp:13]   --->   Operation 162 'load' 'y_assign_load_1' <Predicate = (!and_ln6_1)> <Delay = 0.00>
ST_9 : Operation 163 [1/1] (0.00ns)   --->   "%ret_ln13 = ret i64 %y_assign_load_1" [diffeq.cpp:13]   --->   Operation 163 'ret' 'ret_ln13' <Predicate = (!and_ln6_1)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 7.95>
ST_10 : Operation 110 [6/7] (6.71ns)   --->   "%mul1 = dmul i64 %mul, i64 %u_assign_load" [diffeq.cpp:7]   --->   Operation 110 'dmul' 'mul1' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 111 [7/7] (7.95ns)   --->   "%mul4 = dmul i64 %mul3, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 111 'dmul' 'mul4' <Predicate = (and_ln6_1)> <Delay = 7.95> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.95>
ST_11 : Operation 112 [5/7] (6.71ns)   --->   "%mul1 = dmul i64 %mul, i64 %u_assign_load" [diffeq.cpp:7]   --->   Operation 112 'dmul' 'mul1' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 113 [6/7] (6.71ns)   --->   "%mul4 = dmul i64 %mul3, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 113 'dmul' 'mul4' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 114 [7/7] (7.95ns)   --->   "%mul6 = dmul i64 %u_assign_load, i64 %dx_read" [diffeq.cpp:8]   --->   Operation 114 'dmul' 'mul6' <Predicate = (and_ln6_1)> <Delay = 7.95> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.71>
ST_12 : Operation 115 [4/7] (6.71ns)   --->   "%mul1 = dmul i64 %mul, i64 %u_assign_load" [diffeq.cpp:7]   --->   Operation 115 'dmul' 'mul1' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 116 [5/7] (6.71ns)   --->   "%mul4 = dmul i64 %mul3, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 116 'dmul' 'mul4' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 117 [6/7] (6.71ns)   --->   "%mul6 = dmul i64 %u_assign_load, i64 %dx_read" [diffeq.cpp:8]   --->   Operation 117 'dmul' 'mul6' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.71>
ST_13 : Operation 118 [3/7] (6.71ns)   --->   "%mul1 = dmul i64 %mul, i64 %u_assign_load" [diffeq.cpp:7]   --->   Operation 118 'dmul' 'mul1' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 119 [4/7] (6.71ns)   --->   "%mul4 = dmul i64 %mul3, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 119 'dmul' 'mul4' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 120 [5/7] (6.71ns)   --->   "%mul6 = dmul i64 %u_assign_load, i64 %dx_read" [diffeq.cpp:8]   --->   Operation 120 'dmul' 'mul6' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.71>
ST_14 : Operation 121 [2/7] (6.71ns)   --->   "%mul1 = dmul i64 %mul, i64 %u_assign_load" [diffeq.cpp:7]   --->   Operation 121 'dmul' 'mul1' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 122 [3/7] (6.71ns)   --->   "%mul4 = dmul i64 %mul3, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 122 'dmul' 'mul4' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 123 [4/7] (6.71ns)   --->   "%mul6 = dmul i64 %u_assign_load, i64 %dx_read" [diffeq.cpp:8]   --->   Operation 123 'dmul' 'mul6' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.71>
ST_15 : Operation 124 [1/7] (6.71ns)   --->   "%mul1 = dmul i64 %mul, i64 %u_assign_load" [diffeq.cpp:7]   --->   Operation 124 'dmul' 'mul1' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 125 [2/7] (6.71ns)   --->   "%mul4 = dmul i64 %mul3, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 125 'dmul' 'mul4' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 126 [3/7] (6.71ns)   --->   "%mul6 = dmul i64 %u_assign_load, i64 %dx_read" [diffeq.cpp:8]   --->   Operation 126 'dmul' 'mul6' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.95>
ST_16 : Operation 127 [7/7] (7.95ns)   --->   "%mul2 = dmul i64 %mul1, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 127 'dmul' 'mul2' <Predicate = (and_ln6_1)> <Delay = 7.95> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 128 [1/7] (6.71ns)   --->   "%mul4 = dmul i64 %mul3, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 128 'dmul' 'mul4' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 129 [2/7] (6.71ns)   --->   "%mul6 = dmul i64 %u_assign_load, i64 %dx_read" [diffeq.cpp:8]   --->   Operation 129 'dmul' 'mul6' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.71>
ST_17 : Operation 130 [6/7] (6.71ns)   --->   "%mul2 = dmul i64 %mul1, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 130 'dmul' 'mul2' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 131 [1/7] (6.71ns)   --->   "%mul6 = dmul i64 %u_assign_load, i64 %dx_read" [diffeq.cpp:8]   --->   Operation 131 'dmul' 'mul6' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.29>
ST_18 : Operation 132 [5/7] (6.71ns)   --->   "%mul2 = dmul i64 %mul1, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 132 'dmul' 'mul2' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 133 [7/7] (7.29ns)   --->   "%y1 = dadd i64 %y_assign_load, i64 %mul6" [diffeq.cpp:8]   --->   Operation 133 'dadd' 'y1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.29>
ST_19 : Operation 134 [4/7] (6.71ns)   --->   "%mul2 = dmul i64 %mul1, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 134 'dmul' 'mul2' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 135 [6/7] (7.29ns)   --->   "%y1 = dadd i64 %y_assign_load, i64 %mul6" [diffeq.cpp:8]   --->   Operation 135 'dadd' 'y1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.29>
ST_20 : Operation 136 [3/7] (6.71ns)   --->   "%mul2 = dmul i64 %mul1, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 136 'dmul' 'mul2' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 137 [5/7] (7.29ns)   --->   "%y1 = dadd i64 %y_assign_load, i64 %mul6" [diffeq.cpp:8]   --->   Operation 137 'dadd' 'y1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.29>
ST_21 : Operation 138 [2/7] (6.71ns)   --->   "%mul2 = dmul i64 %mul1, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 138 'dmul' 'mul2' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 139 [4/7] (7.29ns)   --->   "%y1 = dadd i64 %y_assign_load, i64 %mul6" [diffeq.cpp:8]   --->   Operation 139 'dadd' 'y1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 7.29>
ST_22 : Operation 140 [1/7] (6.71ns)   --->   "%mul2 = dmul i64 %mul1, i64 %dx_read" [diffeq.cpp:7]   --->   Operation 140 'dmul' 'mul2' <Predicate = (and_ln6_1)> <Delay = 6.71> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 6> <II = 1> <Delay = 6.71> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 141 [3/7] (7.29ns)   --->   "%y1 = dadd i64 %y_assign_load, i64 %mul6" [diffeq.cpp:8]   --->   Operation 141 'dadd' 'y1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 7.29>
ST_23 : Operation 142 [7/7] (7.29ns)   --->   "%sub = dsub i64 %u_assign_load, i64 %mul2" [diffeq.cpp:7]   --->   Operation 142 'dsub' 'sub' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 143 [2/7] (7.29ns)   --->   "%y1 = dadd i64 %y_assign_load, i64 %mul6" [diffeq.cpp:8]   --->   Operation 143 'dadd' 'y1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 7.29>
ST_24 : Operation 144 [6/7] (7.29ns)   --->   "%sub = dsub i64 %u_assign_load, i64 %mul2" [diffeq.cpp:7]   --->   Operation 144 'dsub' 'sub' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 145 [1/7] (7.29ns)   --->   "%y1 = dadd i64 %y_assign_load, i64 %mul6" [diffeq.cpp:8]   --->   Operation 145 'dadd' 'y1' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.29>
ST_25 : Operation 146 [5/7] (7.29ns)   --->   "%sub = dsub i64 %u_assign_load, i64 %mul2" [diffeq.cpp:7]   --->   Operation 146 'dsub' 'sub' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 147 [1/1] (1.58ns)   --->   "%store_ln6 = store i64 %y1, i64 %y_assign" [diffeq.cpp:6]   --->   Operation 147 'store' 'store_ln6' <Predicate = (and_ln6_1)> <Delay = 1.58>

State 26 <SV = 25> <Delay = 7.29>
ST_26 : Operation 148 [4/7] (7.29ns)   --->   "%sub = dsub i64 %u_assign_load, i64 %mul2" [diffeq.cpp:7]   --->   Operation 148 'dsub' 'sub' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 7.29>
ST_27 : Operation 149 [3/7] (7.29ns)   --->   "%sub = dsub i64 %u_assign_load, i64 %mul2" [diffeq.cpp:7]   --->   Operation 149 'dsub' 'sub' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 7.29>
ST_28 : Operation 150 [2/7] (7.29ns)   --->   "%sub = dsub i64 %u_assign_load, i64 %mul2" [diffeq.cpp:7]   --->   Operation 150 'dsub' 'sub' <Predicate = (and_ln6_1)> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 7.29>
ST_29 : Operation 151 [1/7] (7.29ns)   --->   "%sub = dsub i64 %u_assign_load, i64 %mul2" [diffeq.cpp:7]   --->   Operation 151 'dsub' 'sub' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 7.29>
ST_30 : Operation 152 [7/7] (7.29ns)   --->   "%u1 = dsub i64 %sub, i64 %mul4" [diffeq.cpp:7]   --->   Operation 152 'dsub' 'u1' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 7.29>
ST_31 : Operation 153 [6/7] (7.29ns)   --->   "%u1 = dsub i64 %sub, i64 %mul4" [diffeq.cpp:7]   --->   Operation 153 'dsub' 'u1' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 7.29>
ST_32 : Operation 154 [5/7] (7.29ns)   --->   "%u1 = dsub i64 %sub, i64 %mul4" [diffeq.cpp:7]   --->   Operation 154 'dsub' 'u1' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 7.29>
ST_33 : Operation 155 [4/7] (7.29ns)   --->   "%u1 = dsub i64 %sub, i64 %mul4" [diffeq.cpp:7]   --->   Operation 155 'dsub' 'u1' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 7.29>
ST_34 : Operation 156 [3/7] (7.29ns)   --->   "%u1 = dsub i64 %sub, i64 %mul4" [diffeq.cpp:7]   --->   Operation 156 'dsub' 'u1' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 7.29>
ST_35 : Operation 157 [2/7] (7.29ns)   --->   "%u1 = dsub i64 %sub, i64 %mul4" [diffeq.cpp:7]   --->   Operation 157 'dsub' 'u1' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 7.29>
ST_36 : Operation 158 [1/7] (7.29ns)   --->   "%u1 = dsub i64 %sub, i64 %mul4" [diffeq.cpp:7]   --->   Operation 158 'dsub' 'u1' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 1.58>
ST_37 : Operation 159 [1/1] (0.00ns)   --->   "%specloopname_ln7 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [diffeq.cpp:7]   --->   Operation 159 'specloopname' 'specloopname_ln7' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 160 [1/1] (1.58ns)   --->   "%store_ln6 = store i64 %u1, i64 %u_assign" [diffeq.cpp:6]   --->   Operation 160 'store' 'store_ln6' <Predicate = true> <Delay = 1.58>
ST_37 : Operation 161 [1/1] (0.00ns)   --->   "%br_ln6 = br void %while.cond" [diffeq.cpp:6]   --->   Operation 161 'br' 'br_ln6' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ x]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ dx]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ u]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ a]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ clock]:  wired=1; compound=0; hidden=0; nouse=1; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ y]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
x_assign          (alloca       ) [ 01111111110000000000000000000000000000]
y_assign          (alloca       ) [ 01111111111111111111111111000000000000]
u_assign          (alloca       ) [ 01111111111111111111111111111111111111]
specbitsmap_ln0   (specbitsmap  ) [ 00000000000000000000000000000000000000]
spectopmodule_ln3 (spectopmodule) [ 00000000000000000000000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 00000000000000000000000000000000000000]
specinterface_ln0 (specinterface) [ 00000000000000000000000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 00000000000000000000000000000000000000]
specinterface_ln0 (specinterface) [ 00000000000000000000000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 00000000000000000000000000000000000000]
specinterface_ln0 (specinterface) [ 00000000000000000000000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 00000000000000000000000000000000000000]
specinterface_ln0 (specinterface) [ 00000000000000000000000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 00000000000000000000000000000000000000]
specinterface_ln0 (specinterface) [ 00000000000000000000000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 00000000000000000000000000000000000000]
specinterface_ln0 (specinterface) [ 00000000000000000000000000000000000000]
y_read            (read         ) [ 00000000000000000000000000000000000000]
a_read            (read         ) [ 00100000000000000000000000000000000000]
u_read            (read         ) [ 00000000000000000000000000000000000000]
dx_read           (read         ) [ 00111111111111111111111000000000000000]
x_read            (read         ) [ 00000000000000000000000000000000000000]
bitcast_ln6_1     (bitcast      ) [ 00000000000000000000000000000000000000]
tmp_1             (partselect   ) [ 00000000000000000000000000000000000000]
trunc_ln6         (trunc        ) [ 00000000000000000000000000000000000000]
icmp_ln6_2        (icmp         ) [ 00000000000000000000000000000000000000]
icmp_ln6_3        (icmp         ) [ 00000000000000000000000000000000000000]
or_ln6_1          (or           ) [ 00100000000000000000000000000000000000]
store_ln6         (store        ) [ 00000000000000000000000000000000000000]
store_ln6         (store        ) [ 00000000000000000000000000000000000000]
store_ln6         (store        ) [ 00000000000000000000000000000000000000]
br_ln6            (br           ) [ 00000000000000000000000000000000000000]
x_assign_load     (load         ) [ 00111111100000000000000000000000000000]
specpipeline_ln0  (specpipeline ) [ 00000000000000000000000000000000000000]
bitcast_ln6       (bitcast      ) [ 00000000000000000000000000000000000000]
tmp               (partselect   ) [ 00000000000000000000000000000000000000]
trunc_ln6_1       (trunc        ) [ 00000000000000000000000000000000000000]
icmp_ln6          (icmp         ) [ 00000000000000000000000000000000000000]
icmp_ln6_1        (icmp         ) [ 00000000000000000000000000000000000000]
or_ln6            (or           ) [ 00000000000000000000000000000000000000]
tmp_2             (dcmp         ) [ 00000000000000000000000000000000000000]
and_ln6           (and          ) [ 00000000000000000000000000000000000000]
and_ln6_1         (and          ) [ 00111111111111111111111111111000000000]
br_ln6            (br           ) [ 00000000000000000000000000000000000000]
y_assign_load     (load         ) [ 00001111111111111111111110000000000000]
mul               (dmul         ) [ 00000000011111110000000000000000000000]
x1                (dadd         ) [ 00000000010000000000000000000000000000]
u_assign_load     (load         ) [ 01000000001111111111111111111100000000]
mul3              (dmul         ) [ 00000000001111111000000000000000000000]
store_ln6         (store        ) [ 00000000000000000000000000000000000000]
mul1              (dmul         ) [ 00000000000000001111111000000000000000]
mul4              (dmul         ) [ 01111111100000000111111111111111111110]
mul6              (dmul         ) [ 00000000000000000011111110000000000000]
mul2              (dmul         ) [ 01000000000000000000000111111100000000]
y1                (dadd         ) [ 00000000000000000000000001000000000000]
store_ln6         (store        ) [ 00000000000000000000000000000000000000]
sub               (dsub         ) [ 00111111100000000000000000000011111110]
u1                (dsub         ) [ 00000000010000000000000000000000000001]
specloopname_ln7  (specloopname ) [ 00000000000000000000000000000000000000]
store_ln6         (store        ) [ 00000000000000000000000000000000000000]
br_ln6            (br           ) [ 00000000000000000000000000000000000000]
y_assign_load_1   (load         ) [ 00000000000000000000000000000000000000]
ret_ln13          (ret          ) [ 00000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="x">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="dx">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="dx"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="u">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="u"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="a">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="a"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="clock">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="clock"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="y">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="y"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.double"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i11.i64.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_2"/></StgValue>
</bind>
</comp>

<comp id="54" class="1004" name="x_assign_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="1" slack="0"/>
<pin id="56" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="x_assign/1 "/>
</bind>
</comp>

<comp id="58" class="1004" name="y_assign_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="1" slack="0"/>
<pin id="60" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="y_assign/1 "/>
</bind>
</comp>

<comp id="62" class="1004" name="u_assign_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="1" slack="0"/>
<pin id="64" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="u_assign/1 "/>
</bind>
</comp>

<comp id="66" class="1004" name="y_read_read_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="64" slack="0"/>
<pin id="68" dir="0" index="1" bw="64" slack="0"/>
<pin id="69" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="y_read/1 "/>
</bind>
</comp>

<comp id="72" class="1004" name="a_read_read_fu_72">
<pin_list>
<pin id="73" dir="0" index="0" bw="64" slack="0"/>
<pin id="74" dir="0" index="1" bw="64" slack="0"/>
<pin id="75" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="a_read/1 "/>
</bind>
</comp>

<comp id="78" class="1004" name="u_read_read_fu_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="64" slack="0"/>
<pin id="80" dir="0" index="1" bw="64" slack="0"/>
<pin id="81" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="u_read/1 "/>
</bind>
</comp>

<comp id="84" class="1004" name="dx_read_read_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="64" slack="0"/>
<pin id="86" dir="0" index="1" bw="64" slack="0"/>
<pin id="87" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="dx_read/1 "/>
</bind>
</comp>

<comp id="90" class="1004" name="x_read_read_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="64" slack="0"/>
<pin id="92" dir="0" index="1" bw="64" slack="0"/>
<pin id="93" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_read/1 "/>
</bind>
</comp>

<comp id="96" class="1004" name="grp_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="64" slack="1"/>
<pin id="98" dir="0" index="1" bw="64" slack="1"/>
<pin id="99" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dadd(508) dsub(509) " fcode="dadd"/>
<opset="x1/2 y1/18 sub/23 "/>
</bind>
</comp>

<comp id="100" class="1004" name="grp_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="64" slack="1"/>
<pin id="102" dir="0" index="1" bw="64" slack="14"/>
<pin id="103" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dsub(509) " fcode="dadd"/>
<opset="u1/30 "/>
</bind>
</comp>

<comp id="104" class="1004" name="grp_fu_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="64" slack="0"/>
<pin id="106" dir="0" index="1" bw="64" slack="0"/>
<pin id="107" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dmul(510) " fcode="dmul"/>
<opset="mul/2 mul3/3 mul1/9 mul4/10 mul6/11 mul2/16 "/>
</bind>
</comp>

<comp id="109" class="1004" name="grp_fu_109">
<pin_list>
<pin id="110" dir="0" index="0" bw="64" slack="0"/>
<pin id="111" dir="0" index="1" bw="64" slack="0"/>
<pin id="112" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="dcmp(513) " fcode="dcmp"/>
<opset="tmp_2/1 "/>
</bind>
</comp>

<comp id="114" class="1005" name="reg_114">
<pin_list>
<pin id="115" dir="0" index="0" bw="64" slack="1"/>
<pin id="116" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="mul mul1 mul2 "/>
</bind>
</comp>

<comp id="120" class="1005" name="reg_120">
<pin_list>
<pin id="121" dir="0" index="0" bw="64" slack="1"/>
<pin id="122" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="x1 y1 sub "/>
</bind>
</comp>

<comp id="125" class="1005" name="reg_125">
<pin_list>
<pin id="126" dir="0" index="0" bw="64" slack="1"/>
<pin id="127" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="mul3 mul4 "/>
</bind>
</comp>

<comp id="131" class="1004" name="bitcast_ln6_1_fu_131">
<pin_list>
<pin id="132" dir="0" index="0" bw="64" slack="0"/>
<pin id="133" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln6_1/1 "/>
</bind>
</comp>

<comp id="135" class="1004" name="tmp_1_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="11" slack="0"/>
<pin id="137" dir="0" index="1" bw="64" slack="0"/>
<pin id="138" dir="0" index="2" bw="7" slack="0"/>
<pin id="139" dir="0" index="3" bw="7" slack="0"/>
<pin id="140" dir="1" index="4" bw="11" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_1/1 "/>
</bind>
</comp>

<comp id="145" class="1004" name="trunc_ln6_fu_145">
<pin_list>
<pin id="146" dir="0" index="0" bw="64" slack="0"/>
<pin id="147" dir="1" index="1" bw="52" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln6/1 "/>
</bind>
</comp>

<comp id="149" class="1004" name="icmp_ln6_2_fu_149">
<pin_list>
<pin id="150" dir="0" index="0" bw="11" slack="0"/>
<pin id="151" dir="0" index="1" bw="11" slack="0"/>
<pin id="152" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln6_2/1 "/>
</bind>
</comp>

<comp id="155" class="1004" name="icmp_ln6_3_fu_155">
<pin_list>
<pin id="156" dir="0" index="0" bw="52" slack="0"/>
<pin id="157" dir="0" index="1" bw="52" slack="0"/>
<pin id="158" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln6_3/1 "/>
</bind>
</comp>

<comp id="161" class="1004" name="or_ln6_1_fu_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="1" slack="0"/>
<pin id="163" dir="0" index="1" bw="1" slack="0"/>
<pin id="164" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln6_1/1 "/>
</bind>
</comp>

<comp id="167" class="1004" name="store_ln6_store_fu_167">
<pin_list>
<pin id="168" dir="0" index="0" bw="64" slack="0"/>
<pin id="169" dir="0" index="1" bw="64" slack="0"/>
<pin id="170" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln6/1 "/>
</bind>
</comp>

<comp id="172" class="1004" name="store_ln6_store_fu_172">
<pin_list>
<pin id="173" dir="0" index="0" bw="64" slack="0"/>
<pin id="174" dir="0" index="1" bw="64" slack="0"/>
<pin id="175" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln6/1 "/>
</bind>
</comp>

<comp id="177" class="1004" name="store_ln6_store_fu_177">
<pin_list>
<pin id="178" dir="0" index="0" bw="64" slack="0"/>
<pin id="179" dir="0" index="1" bw="64" slack="0"/>
<pin id="180" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln6/1 "/>
</bind>
</comp>

<comp id="182" class="1004" name="x_assign_load_load_fu_182">
<pin_list>
<pin id="183" dir="0" index="0" bw="64" slack="0"/>
<pin id="184" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="x_assign_load/1 "/>
</bind>
</comp>

<comp id="186" class="1004" name="bitcast_ln6_fu_186">
<pin_list>
<pin id="187" dir="0" index="0" bw="64" slack="1"/>
<pin id="188" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln6/2 "/>
</bind>
</comp>

<comp id="189" class="1004" name="tmp_fu_189">
<pin_list>
<pin id="190" dir="0" index="0" bw="11" slack="0"/>
<pin id="191" dir="0" index="1" bw="64" slack="0"/>
<pin id="192" dir="0" index="2" bw="7" slack="0"/>
<pin id="193" dir="0" index="3" bw="7" slack="0"/>
<pin id="194" dir="1" index="4" bw="11" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="199" class="1004" name="trunc_ln6_1_fu_199">
<pin_list>
<pin id="200" dir="0" index="0" bw="64" slack="0"/>
<pin id="201" dir="1" index="1" bw="52" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln6_1/2 "/>
</bind>
</comp>

<comp id="203" class="1004" name="icmp_ln6_fu_203">
<pin_list>
<pin id="204" dir="0" index="0" bw="11" slack="0"/>
<pin id="205" dir="0" index="1" bw="11" slack="0"/>
<pin id="206" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln6/2 "/>
</bind>
</comp>

<comp id="209" class="1004" name="icmp_ln6_1_fu_209">
<pin_list>
<pin id="210" dir="0" index="0" bw="52" slack="0"/>
<pin id="211" dir="0" index="1" bw="52" slack="0"/>
<pin id="212" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln6_1/2 "/>
</bind>
</comp>

<comp id="215" class="1004" name="or_ln6_fu_215">
<pin_list>
<pin id="216" dir="0" index="0" bw="1" slack="0"/>
<pin id="217" dir="0" index="1" bw="1" slack="0"/>
<pin id="218" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln6/2 "/>
</bind>
</comp>

<comp id="221" class="1004" name="and_ln6_fu_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="1" slack="0"/>
<pin id="223" dir="0" index="1" bw="1" slack="1"/>
<pin id="224" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln6/2 "/>
</bind>
</comp>

<comp id="226" class="1004" name="and_ln6_1_fu_226">
<pin_list>
<pin id="227" dir="0" index="0" bw="1" slack="0"/>
<pin id="228" dir="0" index="1" bw="1" slack="0"/>
<pin id="229" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln6_1/2 "/>
</bind>
</comp>

<comp id="232" class="1004" name="y_assign_load_load_fu_232">
<pin_list>
<pin id="233" dir="0" index="0" bw="64" slack="2"/>
<pin id="234" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="y_assign_load/3 "/>
</bind>
</comp>

<comp id="236" class="1004" name="u_assign_load_load_fu_236">
<pin_list>
<pin id="237" dir="0" index="0" bw="64" slack="8"/>
<pin id="238" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="u_assign_load/9 "/>
</bind>
</comp>

<comp id="240" class="1004" name="store_ln6_store_fu_240">
<pin_list>
<pin id="241" dir="0" index="0" bw="64" slack="1"/>
<pin id="242" dir="0" index="1" bw="64" slack="8"/>
<pin id="243" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln6/9 "/>
</bind>
</comp>

<comp id="245" class="1004" name="store_ln6_store_fu_245">
<pin_list>
<pin id="246" dir="0" index="0" bw="64" slack="1"/>
<pin id="247" dir="0" index="1" bw="64" slack="24"/>
<pin id="248" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln6/25 "/>
</bind>
</comp>

<comp id="250" class="1004" name="store_ln6_store_fu_250">
<pin_list>
<pin id="251" dir="0" index="0" bw="64" slack="1"/>
<pin id="252" dir="0" index="1" bw="64" slack="36"/>
<pin id="253" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln6/37 "/>
</bind>
</comp>

<comp id="254" class="1004" name="y_assign_load_1_load_fu_254">
<pin_list>
<pin id="255" dir="0" index="0" bw="64" slack="8"/>
<pin id="256" dir="1" index="1" bw="64" slack="2147483647"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="y_assign_load_1/9 "/>
</bind>
</comp>

<comp id="257" class="1005" name="x_assign_reg_257">
<pin_list>
<pin id="258" dir="0" index="0" bw="64" slack="0"/>
<pin id="259" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opset="x_assign "/>
</bind>
</comp>

<comp id="264" class="1005" name="y_assign_reg_264">
<pin_list>
<pin id="265" dir="0" index="0" bw="64" slack="0"/>
<pin id="266" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opset="y_assign "/>
</bind>
</comp>

<comp id="272" class="1005" name="u_assign_reg_272">
<pin_list>
<pin id="273" dir="0" index="0" bw="64" slack="0"/>
<pin id="274" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opset="u_assign "/>
</bind>
</comp>

<comp id="279" class="1005" name="a_read_reg_279">
<pin_list>
<pin id="280" dir="0" index="0" bw="64" slack="1"/>
<pin id="281" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="a_read "/>
</bind>
</comp>

<comp id="284" class="1005" name="dx_read_reg_284">
<pin_list>
<pin id="285" dir="0" index="0" bw="64" slack="1"/>
<pin id="286" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="dx_read "/>
</bind>
</comp>

<comp id="290" class="1005" name="or_ln6_1_reg_290">
<pin_list>
<pin id="291" dir="0" index="0" bw="1" slack="1"/>
<pin id="292" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln6_1 "/>
</bind>
</comp>

<comp id="295" class="1005" name="x_assign_load_reg_295">
<pin_list>
<pin id="296" dir="0" index="0" bw="64" slack="1"/>
<pin id="297" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="x_assign_load "/>
</bind>
</comp>

<comp id="303" class="1005" name="and_ln6_1_reg_303">
<pin_list>
<pin id="304" dir="0" index="0" bw="1" slack="1"/>
<pin id="305" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="and_ln6_1 "/>
</bind>
</comp>

<comp id="307" class="1005" name="y_assign_load_reg_307">
<pin_list>
<pin id="308" dir="0" index="0" bw="64" slack="1"/>
<pin id="309" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="y_assign_load "/>
</bind>
</comp>

<comp id="313" class="1005" name="u_assign_load_reg_313">
<pin_list>
<pin id="314" dir="0" index="0" bw="64" slack="1"/>
<pin id="315" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="u_assign_load "/>
</bind>
</comp>

<comp id="320" class="1005" name="mul6_reg_320">
<pin_list>
<pin id="321" dir="0" index="0" bw="64" slack="1"/>
<pin id="322" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="mul6 "/>
</bind>
</comp>

<comp id="325" class="1005" name="u1_reg_325">
<pin_list>
<pin id="326" dir="0" index="0" bw="64" slack="1"/>
<pin id="327" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="u1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="57"><net_src comp="12" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="61"><net_src comp="12" pin="0"/><net_sink comp="58" pin=0"/></net>

<net id="65"><net_src comp="12" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="70"><net_src comp="32" pin="0"/><net_sink comp="66" pin=0"/></net>

<net id="71"><net_src comp="10" pin="0"/><net_sink comp="66" pin=1"/></net>

<net id="76"><net_src comp="32" pin="0"/><net_sink comp="72" pin=0"/></net>

<net id="77"><net_src comp="6" pin="0"/><net_sink comp="72" pin=1"/></net>

<net id="82"><net_src comp="32" pin="0"/><net_sink comp="78" pin=0"/></net>

<net id="83"><net_src comp="4" pin="0"/><net_sink comp="78" pin=1"/></net>

<net id="88"><net_src comp="32" pin="0"/><net_sink comp="84" pin=0"/></net>

<net id="89"><net_src comp="2" pin="0"/><net_sink comp="84" pin=1"/></net>

<net id="94"><net_src comp="32" pin="0"/><net_sink comp="90" pin=0"/></net>

<net id="95"><net_src comp="0" pin="0"/><net_sink comp="90" pin=1"/></net>

<net id="108"><net_src comp="48" pin="0"/><net_sink comp="104" pin=1"/></net>

<net id="113"><net_src comp="72" pin="2"/><net_sink comp="109" pin=1"/></net>

<net id="117"><net_src comp="104" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="118"><net_src comp="114" pin="1"/><net_sink comp="104" pin=0"/></net>

<net id="119"><net_src comp="114" pin="1"/><net_sink comp="96" pin=1"/></net>

<net id="123"><net_src comp="96" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="124"><net_src comp="120" pin="1"/><net_sink comp="100" pin=0"/></net>

<net id="128"><net_src comp="104" pin="2"/><net_sink comp="125" pin=0"/></net>

<net id="129"><net_src comp="125" pin="1"/><net_sink comp="104" pin=0"/></net>

<net id="130"><net_src comp="125" pin="1"/><net_sink comp="100" pin=1"/></net>

<net id="134"><net_src comp="72" pin="2"/><net_sink comp="131" pin=0"/></net>

<net id="141"><net_src comp="34" pin="0"/><net_sink comp="135" pin=0"/></net>

<net id="142"><net_src comp="131" pin="1"/><net_sink comp="135" pin=1"/></net>

<net id="143"><net_src comp="36" pin="0"/><net_sink comp="135" pin=2"/></net>

<net id="144"><net_src comp="38" pin="0"/><net_sink comp="135" pin=3"/></net>

<net id="148"><net_src comp="131" pin="1"/><net_sink comp="145" pin=0"/></net>

<net id="153"><net_src comp="135" pin="4"/><net_sink comp="149" pin=0"/></net>

<net id="154"><net_src comp="40" pin="0"/><net_sink comp="149" pin=1"/></net>

<net id="159"><net_src comp="145" pin="1"/><net_sink comp="155" pin=0"/></net>

<net id="160"><net_src comp="42" pin="0"/><net_sink comp="155" pin=1"/></net>

<net id="165"><net_src comp="155" pin="2"/><net_sink comp="161" pin=0"/></net>

<net id="166"><net_src comp="149" pin="2"/><net_sink comp="161" pin=1"/></net>

<net id="171"><net_src comp="78" pin="2"/><net_sink comp="167" pin=0"/></net>

<net id="176"><net_src comp="66" pin="2"/><net_sink comp="172" pin=0"/></net>

<net id="181"><net_src comp="90" pin="2"/><net_sink comp="177" pin=0"/></net>

<net id="185"><net_src comp="182" pin="1"/><net_sink comp="109" pin=0"/></net>

<net id="195"><net_src comp="34" pin="0"/><net_sink comp="189" pin=0"/></net>

<net id="196"><net_src comp="186" pin="1"/><net_sink comp="189" pin=1"/></net>

<net id="197"><net_src comp="36" pin="0"/><net_sink comp="189" pin=2"/></net>

<net id="198"><net_src comp="38" pin="0"/><net_sink comp="189" pin=3"/></net>

<net id="202"><net_src comp="186" pin="1"/><net_sink comp="199" pin=0"/></net>

<net id="207"><net_src comp="189" pin="4"/><net_sink comp="203" pin=0"/></net>

<net id="208"><net_src comp="40" pin="0"/><net_sink comp="203" pin=1"/></net>

<net id="213"><net_src comp="199" pin="1"/><net_sink comp="209" pin=0"/></net>

<net id="214"><net_src comp="42" pin="0"/><net_sink comp="209" pin=1"/></net>

<net id="219"><net_src comp="209" pin="2"/><net_sink comp="215" pin=0"/></net>

<net id="220"><net_src comp="203" pin="2"/><net_sink comp="215" pin=1"/></net>

<net id="225"><net_src comp="109" pin="2"/><net_sink comp="221" pin=0"/></net>

<net id="230"><net_src comp="221" pin="2"/><net_sink comp="226" pin=0"/></net>

<net id="231"><net_src comp="215" pin="2"/><net_sink comp="226" pin=1"/></net>

<net id="235"><net_src comp="232" pin="1"/><net_sink comp="104" pin=0"/></net>

<net id="239"><net_src comp="236" pin="1"/><net_sink comp="104" pin=1"/></net>

<net id="244"><net_src comp="120" pin="1"/><net_sink comp="240" pin=0"/></net>

<net id="249"><net_src comp="120" pin="1"/><net_sink comp="245" pin=0"/></net>

<net id="260"><net_src comp="54" pin="1"/><net_sink comp="257" pin=0"/></net>

<net id="261"><net_src comp="257" pin="1"/><net_sink comp="177" pin=1"/></net>

<net id="262"><net_src comp="257" pin="1"/><net_sink comp="182" pin=0"/></net>

<net id="263"><net_src comp="257" pin="1"/><net_sink comp="240" pin=1"/></net>

<net id="267"><net_src comp="58" pin="1"/><net_sink comp="264" pin=0"/></net>

<net id="268"><net_src comp="264" pin="1"/><net_sink comp="172" pin=1"/></net>

<net id="269"><net_src comp="264" pin="1"/><net_sink comp="232" pin=0"/></net>

<net id="270"><net_src comp="264" pin="1"/><net_sink comp="245" pin=1"/></net>

<net id="271"><net_src comp="264" pin="1"/><net_sink comp="254" pin=0"/></net>

<net id="275"><net_src comp="62" pin="1"/><net_sink comp="272" pin=0"/></net>

<net id="276"><net_src comp="272" pin="1"/><net_sink comp="167" pin=1"/></net>

<net id="277"><net_src comp="272" pin="1"/><net_sink comp="236" pin=0"/></net>

<net id="278"><net_src comp="272" pin="1"/><net_sink comp="250" pin=1"/></net>

<net id="282"><net_src comp="72" pin="2"/><net_sink comp="279" pin=0"/></net>

<net id="283"><net_src comp="279" pin="1"/><net_sink comp="109" pin=1"/></net>

<net id="287"><net_src comp="84" pin="2"/><net_sink comp="284" pin=0"/></net>

<net id="288"><net_src comp="284" pin="1"/><net_sink comp="96" pin=1"/></net>

<net id="289"><net_src comp="284" pin="1"/><net_sink comp="104" pin=1"/></net>

<net id="293"><net_src comp="161" pin="2"/><net_sink comp="290" pin=0"/></net>

<net id="294"><net_src comp="290" pin="1"/><net_sink comp="221" pin=1"/></net>

<net id="298"><net_src comp="182" pin="1"/><net_sink comp="295" pin=0"/></net>

<net id="299"><net_src comp="295" pin="1"/><net_sink comp="186" pin=0"/></net>

<net id="300"><net_src comp="295" pin="1"/><net_sink comp="109" pin=0"/></net>

<net id="301"><net_src comp="295" pin="1"/><net_sink comp="104" pin=0"/></net>

<net id="302"><net_src comp="295" pin="1"/><net_sink comp="96" pin=0"/></net>

<net id="306"><net_src comp="226" pin="2"/><net_sink comp="303" pin=0"/></net>

<net id="310"><net_src comp="232" pin="1"/><net_sink comp="307" pin=0"/></net>

<net id="311"><net_src comp="307" pin="1"/><net_sink comp="104" pin=0"/></net>

<net id="312"><net_src comp="307" pin="1"/><net_sink comp="96" pin=0"/></net>

<net id="316"><net_src comp="236" pin="1"/><net_sink comp="313" pin=0"/></net>

<net id="317"><net_src comp="313" pin="1"/><net_sink comp="104" pin=1"/></net>

<net id="318"><net_src comp="313" pin="1"/><net_sink comp="104" pin=0"/></net>

<net id="319"><net_src comp="313" pin="1"/><net_sink comp="96" pin=0"/></net>

<net id="323"><net_src comp="104" pin="2"/><net_sink comp="320" pin=0"/></net>

<net id="324"><net_src comp="320" pin="1"/><net_sink comp="96" pin=1"/></net>

<net id="328"><net_src comp="100" pin="2"/><net_sink comp="325" pin=0"/></net>

<net id="329"><net_src comp="325" pin="1"/><net_sink comp="250" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: diffeq : x | {1 }
	Port: diffeq : dx | {1 }
	Port: diffeq : u | {1 }
	Port: diffeq : a | {1 }
	Port: diffeq : y | {1 }
  - Chain level:
	State 1
		tmp_1 : 1
		trunc_ln6 : 1
		icmp_ln6_2 : 2
		icmp_ln6_3 : 2
		or_ln6_1 : 3
		x_assign_load : 1
		tmp_2 : 2
	State 2
		tmp : 1
		trunc_ln6_1 : 1
		icmp_ln6 : 2
		icmp_ln6_1 : 2
		or_ln6 : 3
		and_ln6 : 1
		and_ln6_1 : 3
		br_ln6 : 3
	State 3
		mul3 : 1
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
		mul1 : 1
		ret_ln13 : 1
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------|---------|---------|---------|
| Operation|   Functional Unit  |   DSP   |    FF   |   LUT   |
|----------|--------------------|---------|---------|---------|
|   dadd   |      grp_fu_96     |    3    |   630   |   1141  |
|          |     grp_fu_100     |    3    |   630   |   1141  |
|----------|--------------------|---------|---------|---------|
|   dmul   |     grp_fu_104     |    11   |   342   |   586   |
|----------|--------------------|---------|---------|---------|
|          |  icmp_ln6_2_fu_149 |    0    |    0    |    11   |
|   icmp   |  icmp_ln6_3_fu_155 |    0    |    0    |    24   |
|          |   icmp_ln6_fu_203  |    0    |    0    |    11   |
|          |  icmp_ln6_1_fu_209 |    0    |    0    |    24   |
|----------|--------------------|---------|---------|---------|
|    or    |   or_ln6_1_fu_161  |    0    |    0    |    2    |
|          |    or_ln6_fu_215   |    0    |    0    |    2    |
|----------|--------------------|---------|---------|---------|
|    and   |   and_ln6_fu_221   |    0    |    0    |    2    |
|          |  and_ln6_1_fu_226  |    0    |    0    |    2    |
|----------|--------------------|---------|---------|---------|
|          |  y_read_read_fu_66 |    0    |    0    |    0    |
|          |  a_read_read_fu_72 |    0    |    0    |    0    |
|   read   |  u_read_read_fu_78 |    0    |    0    |    0    |
|          | dx_read_read_fu_84 |    0    |    0    |    0    |
|          |  x_read_read_fu_90 |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   dcmp   |     grp_fu_109     |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|partselect|    tmp_1_fu_135    |    0    |    0    |    0    |
|          |     tmp_fu_189     |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   trunc  |  trunc_ln6_fu_145  |    0    |    0    |    0    |
|          | trunc_ln6_1_fu_199 |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   Total  |                    |    17   |   1602  |   2946  |
|----------|--------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+---------------------+--------+
|                     |   FF   |
+---------------------+--------+
|    a_read_reg_279   |   64   |
|  and_ln6_1_reg_303  |    1   |
|   dx_read_reg_284   |   64   |
|     mul6_reg_320    |   64   |
|   or_ln6_1_reg_290  |    1   |
|       reg_114       |   64   |
|       reg_120       |   64   |
|       reg_125       |   64   |
|      u1_reg_325     |   64   |
|u_assign_load_reg_313|   64   |
|   u_assign_reg_272  |   64   |
|x_assign_load_reg_295|   64   |
|   x_assign_reg_257  |   64   |
|y_assign_load_reg_307|   64   |
|   y_assign_reg_264  |   64   |
+---------------------+--------+
|        Total        |   834  |
+---------------------+--------+

* Multiplexer (MUX) list: 
|------------|------|------|------|--------||---------||---------|
|    Comp    |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|------------|------|------|------|--------||---------||---------|
|  grp_fu_96 |  p0  |   3  |  64  |   192  ||    14   |
|  grp_fu_96 |  p1  |   3  |  64  |   192  ||    14   |
| grp_fu_104 |  p0  |   6  |  64  |   384  ||    31   |
| grp_fu_104 |  p1  |   4  |  64  |   256  ||    20   |
| grp_fu_109 |  p0  |   2  |  64  |   128  ||    9    |
| grp_fu_109 |  p1  |   2  |  64  |   128  ||    9    |
|------------|------|------|------|--------||---------||---------|
|    Total   |      |      |      |  1280  || 10.4824 ||    97   |
|------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           |   DSP  |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |   17   |    -   |  1602  |  2946  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |   10   |    -   |   97   |
|  Register |    -   |    -   |   834  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |   17   |   10   |  2436  |  3043  |
+-----------+--------+--------+--------+--------+
