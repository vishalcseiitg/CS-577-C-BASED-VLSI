digraph "CFG for'_Z6diffeqdddddd' function" {
	BB1 [shape=record, label="{BB1:\l\l  %7 = alloca double, align 8\l
  %8 = alloca double, align 8\l
  %9 = alloca double, align 8\l
  %10 = alloca double, align 8\l
  %11 = alloca double, align 8\l
  %12 = alloca double, align 8\l
  %13 = alloca double, align 8\l
  %14 = alloca double, align 8\l
  %15 = alloca double, align 8\l
  store double %0, double* %7, align 8\l
  store double %1, double* %8, align 8\l
  store double %2, double* %9, align 8\l
  store double %3, double* %10, align 8\l
  store double %4, double* %11, align 8\l
  store double %5, double* %12, align 8\l
  br label %16\l
}"];
	BB1-> BB2;
	BB2 [shape=record, label="{BB2:\l\l  %17 = load double, double* %7, align 8\l
  %18 = load double, double* %10, align 8\l
  %19 = fcmp olt double %17, %18\l
  br i1 %19, label %20, label %44\l
}"];
	BB2-> BB3;
	BB2-> BB4;
	BB3 [shape=record, label="{BB3:\l\l  %21 = load double, double* %9, align 8\l
  %22 = load double, double* %7, align 8\l
  %23 = fmul double 3.000000e+00, %22\l
  %24 = load double, double* %9, align 8\l
  %25 = fmul double %23, %24\l
  %26 = load double, double* %8, align 8\l
  %27 = fneg double %25\l
  %28 = call double @llvm.fmuladd.f64(double %27, double %26, double %21)\l
  %29 = load double, double* %12, align 8\l
  %30 = fmul double 3.000000e+00, %29\l
  %31 = load double, double* %8, align 8\l
  %32 = fneg double %30\l
  %33 = call double @llvm.fmuladd.f64(double %32, double %31, double %28)\l
  store double %33, double* %13, align 8\l
  %34 = load double, double* %12, align 8\l
  %35 = load double, double* %9, align 8\l
  %36 = load double, double* %8, align 8\l
  %37 = call double @llvm.fmuladd.f64(double %35, double %36, double %34)\l
  store double %37, double* %14, align 8\l
  %38 = load double, double* %7, align 8\l
  %39 = load double, double* %8, align 8\l
  %40 = fadd double %38, %39\l
  store double %40, double* %15, align 8\l
  %41 = load double, double* %15, align 8\l
  store double %41, double* %7, align 8\l
  %42 = load double, double* %14, align 8\l
  store double %42, double* %12, align 8\l
  %43 = load double, double* %13, align 8\l
  store double %43, double* %9, align 8\l
  br label %16, !llvm.loop !6\l
}"];
	BB3-> BB2;
	BB4 [shape=record, label="{BB4:\l\l  %45 = load double, double* %12, align 8\l
  ret double %45\l
}"];
}
