

================================================================
== Vitis HLS Report for 'sequence'
================================================================
* Date:           Tue Jan 31 18:16:47 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        collatz_conjec
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.408 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_8_1  |        ?|        ?|         1|          1|          1|     ?|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.40>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%n_assign = alloca i32 1"   --->   Operation 4 'alloca' 'n_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%spectopmodule_ln6 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [collatz_conjecture.cpp:6]   --->   Operation 5 'spectopmodule' 'spectopmodule_ln6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %n"   --->   Operation 6 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %n, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%n_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %n" [collatz_conjecture.cpp:6]   --->   Operation 8 'read' 'n_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.48ns)   --->   "%store_ln8 = store i32 %n_read, i32 %n_assign" [collatz_conjecture.cpp:8]   --->   Operation 9 'store' 'store_ln8' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%br_ln8 = br void %while.body" [collatz_conjecture.cpp:8]   --->   Operation 10 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%n_assign_load = load i32 %n_assign" [collatz_conjecture.cpp:21]   --->   Operation 11 'load' 'n_assign_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 12 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.11ns)   --->   "%icmp_ln13 = icmp_eq  i32 %n_assign_load, i32 1" [collatz_conjecture.cpp:13]   --->   Operation 13 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void %if.end, void %while.end" [collatz_conjecture.cpp:13]   --->   Operation 14 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node select_ln16)   --->   "%empty = trunc i32 %n_assign_load" [collatz_conjecture.cpp:21]   --->   Operation 15 'trunc' 'empty' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specloopname_ln16 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [collatz_conjecture.cpp:16]   --->   Operation 16 'specloopname' 'specloopname_ln16' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node select_ln16)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %n_assign_load, i32 31" [collatz_conjecture.cpp:18]   --->   Operation 17 'bitselect' 'tmp' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.20ns)   --->   "%sub_ln18 = sub i32 0, i32 %n_assign_load" [collatz_conjecture.cpp:18]   --->   Operation 18 'sub' 'sub_ln18' <Predicate = (!icmp_ln13)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%lshr_ln18_1 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %sub_ln18, i32 1, i32 31" [collatz_conjecture.cpp:18]   --->   Operation 19 'partselect' 'lshr_ln18_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i31 %lshr_ln18_1" [collatz_conjecture.cpp:18]   --->   Operation 20 'zext' 'zext_ln18' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.19ns)   --->   "%sub_ln18_1 = sub i32 0, i32 %zext_ln18" [collatz_conjecture.cpp:18]   --->   Operation 21 'sub' 'sub_ln18_1' <Predicate = (!icmp_ln13)> <Delay = 1.19> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.19> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node select_ln16)   --->   "%lshr_ln18_2 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %n_assign_load, i32 1, i32 31" [collatz_conjecture.cpp:18]   --->   Operation 22 'partselect' 'lshr_ln18_2' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node select_ln16)   --->   "%zext_ln18_1 = zext i31 %lshr_ln18_2" [collatz_conjecture.cpp:18]   --->   Operation 23 'zext' 'zext_ln18_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node select_ln16)   --->   "%select_ln18 = select i1 %tmp, i32 %sub_ln18_1, i32 %zext_ln18_1" [collatz_conjecture.cpp:18]   --->   Operation 24 'select' 'select_ln18' <Predicate = (!icmp_ln13)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%shl_ln21 = shl i32 %n_assign_load, i32 2" [collatz_conjecture.cpp:21]   --->   Operation 25 'shl' 'shl_ln21' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln21 = sub i32 %shl_ln21, i32 %n_assign_load" [collatz_conjecture.cpp:21]   --->   Operation 26 'sub' 'sub_ln21' <Predicate = (!icmp_ln13)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 27 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln21 = add i32 %sub_ln21, i32 1" [collatz_conjecture.cpp:21]   --->   Operation 27 'add' 'add_ln21' <Predicate = (!icmp_ln13)> <Delay = 0.88> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 28 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln16 = select i1 %empty, i32 %add_ln21, i32 %select_ln18" [collatz_conjecture.cpp:16]   --->   Operation 28 'select' 'select_ln16' <Predicate = (!icmp_ln13)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.48ns)   --->   "%store_ln8 = store i32 %select_ln16, i32 %n_assign" [collatz_conjecture.cpp:8]   --->   Operation 29 'store' 'store_ln8' <Predicate = (!icmp_ln13)> <Delay = 0.48>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln8 = br void %while.body" [collatz_conjecture.cpp:8]   --->   Operation 30 'br' 'br_ln8' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%ret_ln24 = ret" [collatz_conjecture.cpp:24]   --->   Operation 31 'ret' 'ret_ln24' <Predicate = (icmp_ln13)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.41ns
The critical path consists of the following:
	'alloca' operation ('n') [2]  (0 ns)
	'load' operation ('n', collatz_conjecture.cpp:21) on local variable 'n' [10]  (0 ns)
	'sub' operation ('sub_ln18', collatz_conjecture.cpp:18) [18]  (1.2 ns)
	'sub' operation ('sub_ln18_1', collatz_conjecture.cpp:18) [21]  (1.19 ns)
	'select' operation ('n', collatz_conjecture.cpp:18) [24]  (0 ns)
	'select' operation ('n', collatz_conjecture.cpp:16) [28]  (0.525 ns)
	'store' operation ('store_ln8', collatz_conjecture.cpp:8) of variable 'n', collatz_conjecture.cpp:16 on local variable 'n' [29]  (0.489 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
